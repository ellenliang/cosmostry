DEFINE MODULE Cosmos
BEGIN
    VIEW JobRepositoryEx RETURN ROWSET
    ( 
        JobGUID:	    string,
        JobName:        string,
        JobPriority:	int,
        JobRuntimeName:	string,
        JobUser:	    string,
        JobVirtualCluster:	string,
        SubmitMachineName:	string,
        SubmitTime:	    DateTime?,
        VirtualClusterAllocation: int,
        VirtualClusterQueueLength:	int,
        JobState: string,
        CompilationState:	string,
        Result:	string,
        Error:	string,
        StartTime:	DateTime?,
        EndTime:	DateTime?,
        InputSize:	long,
        PnHoursFromAnalysisResult:	double,
        PnHoursFromStageStat:	double,
        TotalPnHoursFromAnalysisResult:	double,
        BonusPnHours:	double,
        TotalNumberOfVertices:	long,
        DataRead:	long,
        DataReadIntraPod:	long,
        DataReadAccrossPod:	long,
        DataWrite:	long,
        IsJobRepositoryMissed:	bool,
        RawJobMetaData:	byte[],
        TotalPnHoursFromJobInfo:	double?,
        __date: DateTime,
        RunDuration:	double,    
        QueueDuration:	double,
        Contact: string,
        BusinessUnit: string,
        BusinessGroup: string,
        FeatureTeam: string
    )
    PARAMS (
	    Start string,
	    End string
    );


    VIEW JobRepository RETURN ROWSET
    ( 
        JobGUID:	    string,
        JobName:        string,
        JobPriority:	int,
        JobRuntimeName:	string,
        JobUser:	    string,
        JobVirtualCluster:	string,
        SubmitMachineName:	string,
        SubmitTime:	    DateTime?,
        VirtualClusterAllocation: int,
        VirtualClusterQueueLength:	int,
        JobState: string,
        CompilationState:	string,
        Result:	string,
        Error:	string,
        StartTime:	DateTime?,
        EndTime:	DateTime?,
        InputSize:	long,
        PnHoursFromAnalysisResult:	double,
        PnHoursFromStageStat:	double,
        TotalPnHoursFromAnalysisResult:	double,
        BonusPnHours:	double,
        TotalNumberOfVertices:	long,
        DataRead:	long,
        DataReadIntraPod:	long,
        DataReadAccrossPod:	long,
        DataWrite:	long,
        IsJobRepositoryMissed:	bool,
        RawJobMetaData:	byte[],
        TotalPnHoursFromJobInfo:	double?,
        __date: DateTime,
        RunDuration:	double,    
        QueueDuration:	double
    )
    PARAMS (
	    Start string,
	    End string
    );

    VIEW VCMetadata RETURN ROWSET
    ( 
        CustomerID:	string,
        BusinessUnit: string,
        BusinessGroup:	string,
        FeatureTeam:	string,
        FeatureArea:	string,
        VirtualCluster:	string,
        Contact:	string,    
        Cluster:	string,
        __date: DateTime
    )
    PARAMS (
	    Start string,
	    End string
    );


END MODULE


// ---------------------

    VIEW JobRepositoryEx RETURN ROWSET
    ( 
        JobGUID:	    string,
        JobName:        string,
        JobPriority:	int,
        JobRuntimeName:	string,
        JobUser:	    string,
        JobVirtualCluster:	string,
        SubmitMachineName:	string,
        SubmitTime:	    DateTime?,
        VirtualClusterAllocation: int,
        VirtualClusterQueueLength:	int,
        JobState: string,
        CompilationState:	string,
        Result:	string,
        Error:	string,
        StartTime:	DateTime?,
        EndTime:	DateTime?,
        InputSize:	long,
        PnHoursFromAnalysisResult:	double,
        PnHoursFromStageStat:	double,
        TotalPnHoursFromAnalysisResult:	double,
        BonusPnHours:	double,
        TotalNumberOfVertices:	long,
        DataRead:	long,
        DataReadIntraPod:	long,
        DataReadAccrossPod:	long,
        DataWrite:	long,
        IsJobRepositoryMissed:	bool,
        RawJobMetaData:	byte[],
        TotalPnHoursFromJobInfo:	double?,
        __date: DateTime,
        RunDuration:	double,    
        QueueDuration:	double,
        Contact: string,
        BusinessUnit: string,
        BusinessGroup: string,
        FeatureTeam: string
    )
    PARAMS (
	    Start string,
	    End string
    )
BEGIN

    jobs = JobRepository(Start=@Start, End=@End);
    vcmetadata = VCMetadata(Start = @Start, End = @End);

    jobs2 = SELECT    jobs.*, jobs.JobVirtualCluster.ToLower() AS JobVirtualClusterNormalized
            FROM jobs;
    
    vcmetadata2 =
        SELECT vcmetadata.*,
               vcmetadata.VirtualCluster.ToLower() AS VirtualClusterNormalized
        FROM vcmetadata;


    jobs3 = SELECT    jobs2.*, 
                        vcmetadata2.Contact,
                        vcmetadata2.BusinessUnit,
                        vcmetadata2.BusinessGroup,
                        vcmetadata2.FeatureTeam
            FROM jobs2 INNER JOIN vcmetadata2 ON jobs2.JobVirtualClusterNormalized == vcmetadata2.VirtualClusterNormalized AND jobs2.__date == vcmetadata2.__date ;
    
    jobs4 =
        SELECT JobGUID,
               JobName,
               JobPriority,
               JobRuntimeName,
               JobUser,
               JobVirtualCluster,
               SubmitMachineName,
               SubmitTime,
               VirtualClusterAllocation,
               VirtualClusterQueueLength,
               JobState,
               CompilationState,
               Result,
               Error,
               StartTime,
               EndTime,
               InputSize,
               PnHoursFromAnalysisResult,
               PnHoursFromStageStat,
               TotalPnHoursFromAnalysisResult,
               BonusPnHours,
               TotalNumberOfVertices,
               DataRead,
               DataReadIntraPod,
               DataReadAccrossPod,
               DataWrite,
               IsJobRepositoryMissed,
               RawJobMetaData,
               TotalPnHoursFromJobInfo,
               __date,
               RunDuration,
               QueueDuration,
               Contact,
               BusinessUnit,
               BusinessGroup,
               FeatureTeam
    
        FROM jobs3;

END VIEW



VIEW JobRepository RETURN ROWSET
( 
    JobGUID:	string,
    JobName: string,
    JobPriority:	int,
    JobRuntimeName:	string,
    JobUser:	string,
    JobVirtualCluster:	string,
    SubmitMachineName:	string,
    SubmitTime:	DateTime?,
    VirtualClusterAllocation: int,
    VirtualClusterQueueLength:	int,
    JobState: string,
    CompilationState:	string,
    Result:	string,
    Error:	string,
    StartTime:	DateTime?,
    EndTime:	DateTime?,
    InputSize:	long,
    PnHoursFromAnalysisResult:	double,
    PnHoursFromStageStat:	double,
    TotalPnHoursFromAnalysisResult:	double,
    BonusPnHours:	double,
    TotalNumberOfVertices:	long,
    DataRead:	long,
    DataReadIntraPod:	long,
    DataReadAccrossPod:	long,
    DataWrite:	long,
    IsJobRepositoryMissed:	bool,
    RawJobMetaData:	byte[],
    TotalPnHoursFromJobInfo:	double?,
    __date: DateTime,
    RunDuration:	double,    
    QueueDuration:	double
)
PARAMS (
	Start string,
	End string
)
BEGIN

    jobs = SSTREAM 
            STREAMSET @"/system/jobRepository/cooked/jobFileExts/"
            PATTERN @"%Y/%m/%d/JobMetaData_%Y%m%d.ss"
            RANGE __date=[ @Start, @End ];

    jobs2 = SELECT *, 
                   ( EndTime.HasValue && StartTime.HasValue ? (EndTime.Value-StartTime.Value).TotalSeconds : -1) AS RunDuration ,
                   ( StartTime.HasValue && SubmitTime.HasValue  ? (StartTime.Value-SubmitTime.Value).TotalSeconds : -1) AS QueueDuration 
                   FROM jobs;
END VIEW

VIEW VCMetadata RETURN ROWSET
( 
    CustomerID:	string,
    BusinessUnit: string,
    BusinessGroup:	string,
    FeatureTeam:	string,
    FeatureArea:	string,
    VirtualCluster:	string,
    Contact:	string,    
    Cluster:	string,
    __date: DateTime
)
PARAMS (
	Start string,
	End string
)
BEGIN
    custinfo = 
        EXTRACT CustomerID:string, BusinessUnit:string, BusinessGroup:string, FeatureTeam:string, FeatureArea:string, c6:string,c7:string,c8:string,c9:string,c10:string, __date
        FROM
            STREAMSET @"/system/Reporting/"
            PATTERN @"%Y/%m/%d/CustomerInformation.tsv"
            RANGE __date=[ @Start, @End ]
        USING DefaultTextExtractor();

    vcinfo = 
        EXTRACT Cluster:string, VirtualCluster:string, Description:string, FeatureTeam_ignore:string, a:string, b:string, c:string, Contact:string, AdminGroup:string, 
            AccessGroup:string,date8:string,CustomerID:string, __date
        FROM  STREAMSET @"/system/Reporting/"
            PATTERN @"%Y/%m/%d/VC_%Y_%m_%d.log"
            RANGE __date=[ @Start, @End ]
        USING DefaultTextExtractor();

    XINFO = 
    SELECT custinfo.CustomerID, BusinessUnit, BusinessGroup, FeatureTeam, FeatureArea, vcinfo.VirtualCluster, Contact, Cluster , custinfo.__date
    FROM vcinfo 
        INNER JOIN custinfo ON custinfo.CustomerID == vcinfo.CustomerID AND custinfo.__date == vcinfo.__date;
END VIEW

